openapi: '3.0.1'
info:
  title: SVT DB Agent(AncASIC_SLDO part)
  description: |
    The Kafka communication layer definitions for `SVT DB Agent Service for SLDO Tests`. 
    
    ### Naming Conventions
    - The path format of routes has the next format `/<KAFKA_TOPIC_NAME>/<MESSAGE_TYPE_NAME>`.
    - The reply message topic name is define by the global SVT naming conventions `*.reply`, e.g: 
      - request message topic `svt.db-agent.request` => reply topic name `svt.db-agent.request.reply`
    - Each message structure follows the global SVT naming conventions 
    
    ### POST Request Meaning
    - Request body describes Kafka Message structure
    - Response
      - if response is specified, the relevant message will be emmited to the relevant *.reply topic as a reply to that message.
    
    ### Useful Links
    - Online Swagger Editor: [https://editor-next.swagger.io](https://editor-next.swagger.io)
    - SVT Kafka Naming Conventions: [README](https://github.com/SVT-WP2/SVTSW/blob/master/Documentation/Kafka/SvtKafkaConventions.md)
    
    

  version: 0.0.2
paths:
  /svt.db-agent.request/GetAllTestSetups:
    post:
      tags:
        - Test Setup
      summary: Get All Test Setups
      description: Returns list of Test setups in the reply message. Optional filter by Test Setup Ids can be applied to return exact set of Test Setups.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/GetAllTestSetupsMessage'

        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/GetAllTestSetupsReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"
                
  /svt.db-agent.request/CreateTestSetup:
    post:
      tags:
        - Test Setup
      summary: Create a Test Setup
      description: Returns the newly created TestSetup in the reply message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/CreateTestSetupMessage'

        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/CreateTestSetupReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"
                
  /svt.db-agent.request/UpdateTestSetup:
    post:
      tags:
        - Test Setup
      summary: Update Test Setup
      description: Returns updated TestSetup in the reply message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/UpdateTestSetupMessage'
    
        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/UpdateTestSetupReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"

  /svt.db-agent.request/GetAllSLDOTestConfigurations:
    post:
      tags:
        - SLDO Test Configurations
      summary: Get All SLDO Test Configurations
      description: Returns list of SLDO Test Configurations in the reply message. Optional filter by Test Configuration Ids can be applied to return exact set of Test Setups.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/GetAllSLDOTestConfigurationsMessage'

        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/GetAllSLDOTestConfigurationsReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"
                
  /svt.db-agent.request/CreateTestConfiguration:
    post:
      tags:
        - SLDO Test Configurations
      summary: Create a Test Configuration
      description: Returns the newly created SLDO Test Configurations in the reply message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/CreateTestConfigurationMessage'

        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/CreateTestConfigurationReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"
                
  /svt.db-agent.request/GetAllSLDOTests:
    post:
      tags:
        - SLDO Tests
      summary: Get All SLDO Tests
      description: Returns list of SLDO Tests in the reply message. Optional filter by Ancillary ASIC Test Ids can be applied to return exact set of Test Setups.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/GetAllSLDOTestMessage'

        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/GetAllSLDOTestReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"

  /svt.db-agent.request/CreateSLDOTest:
    post:
      tags:
        - SLDO Tests
      summary: Create an Ancillary ASIC Test
      description: Returns the newly created Ancillary ASIC Test in the reply message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/RequestMessage'
                - $ref: '#/components/schemas/CreateSLDOTestMessage'

        required: true
      responses:
        '200':
          description: Reply Message
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/ReplyMessage'
                  - $ref: '#/components/schemas/CreateSLDOTestReplyMessage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplyMessage"
                
  
              
components:
  schemas:
    RequestMessage:
      type: object
      required:
        - type
      properties:
        type:
          type: string
        data:
          type: object
    ReplyMessage:
      type: object
      required:
        - status
        - type
      properties:
        status:
          $ref: "#/components/schemas/ReplyStatus"
        type:
          type: string
        data:
          type: object
        error:
          type: object
          required:
            - message
          properties:
            code:
              type: number
            message:
              type: string
    ReplyStatus:
      type: string
      enum:
        - Success
        - BadRequest
        - NotFound
        - UnexpectedError
    #
    # Test Setup :: LIST
    #
    GetAllTestSetupsMessage:
      properties:
        type:
          type: string
          default: 'GetAllTestSetups'
        data:
          type: object
          properties:
            filter:
              type: object
              properties:
                ids:
                  type: array
                  description: Test setups ids array. If array is empty / undefined => all Test Setups will be returned.
                  items:
                    type: number
    GetAllTestSetupsReplyMessage:
      properties:
        type:
          type: string
          default: 'GetAllTestSetupsReply'
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/TestSetupDto'
    #
    # TESTSETUP :: CREATE
    #
    CreateTestSetupMessage:
      properties:
        type:
          type: string
          default: 'CreateTestSetup'
        data:
          type: object
          properties:
            create:
              $ref: "#/components/schemas/TestSetupCreateDto"
    CreateTestSetupReplyMessage:
      properties:
        type:
          type: string
          default: 'CreateTestSetupReply'
        data:
          type: object
          properties:
            entity:
              $ref: '#/components/schemas/TestSetupDto'
    #
    # TESTSETUP :: UPDATE
    #
    UpdateTestSetupMessage:
      properties:
        type:
          type: string
          default: 'UpdateTestSetup'
        data:
          type: object
          required:
            - id
            - update
          properties:
            id:
              type: number
              description: TestSetup Id
            update:
              $ref: "#/components/schemas/TestSetupDto"
    UpdateTestSetupReplyMessage:
      properties:
        type:
          type: string
          default: 'UpdateTestSetupReply'
        data:
          type: object
          properties:
            entity:
              $ref: '#/components/schemas/TestSetupDto'
    
   
    
    #
    # TESTCONFIGURATION :: LIST
    #
    GetAllSLDOTestConfigurationsMessage:
      properties:
        type:
          type: string
          default: 'GetAllSLDOTestConfigurations'
        data:
          type: object
          properties:
            filter:
              type: object
              properties:
                ids:
                  type: array
                  description: SLDO Test Configurations ids array. If array is empty / undefined => all SLDO Test Configurations will be returned.
                  items:
                    type: number
    GetAllSLDOTestConfigurationsReplyMessage:
      properties:
        type:
          type: string
          default: 'GetAllSLDOTestConfigurationsReply'
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/TestConfigurationDto'
    #
    # TESTCONFIGURATION :: CREATE
    #
    CreateTestConfigurationMessage:
      properties:
        type:
          type: string
          default: 'CreateTestConfiguration'
        data:
          type: object
          properties:
            create:
              $ref: "#/components/schemas/TestConfigurationCreateDto"
    CreateTestConfigurationReplyMessage:
      properties:
        type:
          type: string
          default: 'CreateTestConfigurationReply'
        data:
          type: object
          properties:
            entity:
              $ref: '#/components/schemas/TestConfigurationDto'
              
        #
    #   
    # SLDOTest :: LIST
    #
    GetAllSLDOTestMessage:
      properties:
        type:
          type: string
          default: 'GetAllSLDOTests'
        data:
          type: object
          properties:
            filter:
              type: object
              properties:
                ids:
                  type: array
                  description: Anc Asic Test ids array. If array is empty / undefined => all Anc Asic Tests will be returned.
                  items:
                    type: number
    GetAllSLDOTestReplyMessage:
      properties:
        type:
          type: string
          default: 'GetAllSLDOTestsReply'
        data:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/SLDOTestDto'
    #
    # SLDOTest :: CREATE
    #
    CreateSLDOTestMessage:
      properties:
        type:
          type: string
          default: 'CreateSLDOTest'
        data:
          type: object
          properties:
            create:
              $ref: "#/components/schemas/SLDOTestCreateDto"
    CreateSLDOTestReplyMessage:
      properties:
        type:
          type: string
          default: 'CreateSLDOTestReply'
        data:
          type: object
          properties:
            entity:
              $ref: '#/components/schemas/SLDOTestDto'
    #
    # DTOs
    #
    TestSetupDto:
      type: object
      required:
        - id
        - name
        - location
        - equipment
        - equipmentDetails
      properties:
        id:
          type: number
        name:
          type: string
        location:
          type: string
        equipment:
          type: string
        equipmentDetails:
          type: string
          description: Stringified JSON in the correct format.
          
    
    TestSetupCreateDto:
      type: object
      required:
        - name
        - location
        - equipment
        - equipmentDetails
      properties:
        name:
          type: string
        location:
          type: string
        equipment:
          type: string
        equipmentDetails:
          type: string
          description: Stringified JSON in the correct format.

        
    
    TestConfigurationDto:
      type: object
      required:
        - id
        - name
        - mode
        - loadCapacitance
        - loadCurrent
        - temperature
      properties:
        id:
          type: number
        name:
          type: string
        mode:
          type: string
          description: Values from the Modes Enum.
        loadCapacitance:
          type: string
          description: Values from the loadCap Enum.
        loadCurrent:
          type: string
          description: Values from the loadCurrent Enum.
        temperature:
          type: string
          description: Values from the temparature Enum.
    
    TestConfigurationCreateDto:
      type: object
      required:
        - name
        - mode
        - loadCapacitance
        - loadCurrent
        - temperature
      properties:
        name:
          type: string
        mode:
          type: string
          description: Values from the Modes Enum.
        loadCapacitance:
          type: string
          description: Values from the loadCap Enum.
        loadCurrent:
          type: string
          description: Values from the loadCurrent Enum.
        temperature:
          type: string
          description: Values from the temparature Enum.
      
    SLDOTestDto:
      type: object
      required:
        - id
        - name
        - asicId
        - testSetupId
        - configId
        - testValues
      properties:
        id:
          type: number
        name:
          type: string
        asicId:
          type: number
        testSetupId:
          type: number
        configId:
          type: number
        testValues:
          type: string
          description: Stringified JSON in the correct format.
          
    SLDOTestCreateDto:
      type: object
      required:
          - name
          - asicId
          - testSetupId
          - configId
          - testValues
      properties:
        name:
          type: string
        asicId:
          type: number
        testSetupId:
          type: number
        configId:
          type: number
        testValues:
          type: string
          description: Stringified JSON in the correct format.

