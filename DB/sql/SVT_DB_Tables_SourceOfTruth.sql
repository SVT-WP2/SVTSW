CREATE SCHEMA "main";

CREATE TYPE "main"."engineeringRun" AS ENUM (
  'ER1',
  'ER2',
  'ER3',
  'LAS1',
  'Ancillary1'
);

CREATE TYPE "main"."foundryName" AS ENUM (
  'TowerSemiconductor',
  'Xfab'
);

CREATE TYPE "main"."waferTech" AS ENUM (
  'TPSCo65',
  'Xfab110'
);

CREATE TYPE "main"."asicFamilyType" AS ENUM (
  'MOST',
  'MOSS',
  'BABYMOSS',
  'BABYMOST',
  'NKF7',
  'MOSAIX',
  'BabyMOSAIX',
  'LAS',
  'AncMPW1',
  'AncMPW2',
  'AncMPW3',
  'AncBrain',
  'AncASIC',
  'CE65_V1CG_15U_SQ',
  'CE65_V2CG_15U_SQ',
  'CE65_V2CG_18U_SQ',
  'CE65_V2CG_18U_HSQ',
  'CE65_V2CG_22U5_SQ',
  'CE65_V2CG_22U5_HSQ',
  'CE65_V2CN_15U_SQ',
  'CE65_V2CN_18U_SQ',
  'CE65_V2CN_18U_HSQ',
  'CE65_V2CN_22U5_SQ',
  'CE65_V2CN_22U5_HSQ',
  'AO10P',
  'AO10',
  'AO10B',
  'S',
  'DESY',
  'NONAME1',
  'CE65_V1CN_15U_SQ',
  'NONAME2',
  'CE65_V1CB_15U_SQ',
  'dPTSN',
  'dPTS',
  'AF15P',
  'AF15B',
  'AF15',
  'RAL_TXRX_ER1',
  'TTS_5',
  'TTS_4',
  'CE65_V2CB_15U_SQ',
  'CE65_V2CB_22U5_SQ',
  'CE65_V2CB_18U_HSQ',
  'CE65_V2CB_22U5_HSQ',
  'CE65_V2CB_18U_SQ',
  'NKF5',
  'NKF6',
  'NONAME5',
  'SEU_2_INFN_BAR_GDR',
  'SEU_1_INFN_BAR_GDR',
  'TTS_3',
  'TTS_2',
  'TTS_1'
);

CREATE TYPE "main"."waferMapOrientation" AS ENUM (
  'North',
  'South',
  'East',
  'West'
);

CREATE TYPE "main"."wpConnectionType" AS ENUM (
  'TCPIP',
  'GPIB',
  'RS232',
  'USB',
  'Ethernet',
  'Modbus',
  'LAN'
);

CREATE TYPE "main"."wpGeneralLocation" AS ENUM (
  'CERN_186_R_E10',
  'Prague',
  'LosAlamos',
  'BNL',
  'RAL',
  'Darsburry',
  'Brunel',
  'Birmingham',
  'Liverpool',
  'LBL'
);

CREATE TYPE "main"."wpSwType" AS ENUM (
  'Sentio',
  'VeloxCascade'
);

CREATE TYPE "main"."wpVendor" AS ENUM (
  'MPI',
  'CascadeMicrotech',
  'FormFactor'
);

CREATE TYPE "main"."pcVendor" AS ENUM (
  'MPI',
  'Korea',
  'Synergie',
  'FormFactorPC'
);

CREATE TYPE "main"."pcName" AS ENUM (
  'NKF7_MPI',
  'BabyMOSS_Korea',
  'Mosaix_Korea'
);

CREATE TYPE "main"."pcModel" AS ENUM (
  'NKF7-TS3500-CABLEOUT-MLO(EVS-P)',
  'MosaixLeft',
  'MosaixRight',
  'LAS',
  'BabyMOSS',
  'Ancillary'
);

CREATE TYPE "main"."pcLocation" AS ENUM (
  'CERN',
  'Prague',
  'LosAlamos',
  'BNL',
  'RAL'
);

CREATE TYPE "main"."pcType" AS ENUM (
  'Vertical',
  'Cantilever'
);

CREATE TYPE "main"."asicQuality" AS ENUM (
  'MechanicallyDamaged',
  'MechanicallyInteger',
  'CoveredByGreenLayer'
);

CREATE TYPE "main"."contactMechanicalQuality" AS ENUM (
  'Good',
  'Bad',
  'AvoidIfPossible'
);

CREATE TYPE "main"."waferInMachineStatus" AS ENUM (
  'Loaded',
  'Unloaded'
);

CREATE TYPE "main"."testEquipments" AS ENUM (
  'oscilloscope',
  'powerSupply',
  'signalGenetaor',
  'SMU'
);

CREATE TYPE "main"."sldoTestTypes" AS ENUM (
  'Power_ramp_up',
  'PSRR',
  'Power_Ramp_rate',
  'DAC_Scan',
  'Overcurrent',
  'Irradiation'
);

CREATE TYPE "main"."sldoTestModes" AS ENUM (
  'Mode0',
  'Mode1'
);

CREATE TYPE "main"."sldoTestRampTime" AS ENUM (
  '100us',
  '1ms',
  '10ms',
  '100ms',
  '1s'
);

CREATE TYPE "main"."sldoTestLoadCap" AS ENUM (
  '10nF',
  '100nF',
  '1uF',
  '10uF'
);

CREATE TYPE "main"."sldoTestLoadCurrent" AS ENUM (
  '40mA',
  '500mA',
  '900mA'
);

CREATE TYPE "main"."sldoTestTemparature" AS ENUM (
  '-20C',
  '27C',
  '60C',
  '105C'
);

CREATE TYPE "main"."testSetupType" AS ENUM (
  'SLDO_MPW1',
  'NVG_MPW2',
  'ER1_MOSAIX'
);

CREATE TABLE "main"."WaferType" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) NOT NULL,
  "engineeringRun" main."engineeringRun" NOT NULL,
  "foundry" main."foundryName" NOT NULL,
  "technology" main."waferTech" NOT NULL,
  "waferMap" JSON NOT NULL
);

CREATE TABLE "main"."Wafer" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "waferTypeId" integer NOT NULL,
  "serialNumber" varchar(50) UNIQUE NOT NULL,
  "batchNumber" integer NOT NULL,
  "thinningDate" date,
  "dicingDate" date,
  "productionDate" date,
  "generalLocation" main."wpGeneralLocation"
);

CREATE TABLE "main"."WaferLocation" (
  "waferId" integer NOT NULL,
  "generalLocation" main."wpGeneralLocation" NOT NULL,
  "creationTime" timestamp DEFAULT (CURRENT_TIMESTAMP),
  "username" varchar(50),
  "note" text
);

CREATE TABLE "main"."Version" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(50) NOT NULL,
  "baseVersion" integer,
  "creationTime" timestamp DEFAULT (CURRENT_TIMESTAMP),
  "note" text
);

CREATE TABLE "main"."WaferTypeImage" (
  "waferTypeId" integer NOT NULL,
  "imageBase64String" text NOT NULL
);

CREATE TABLE "main"."Asic" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "waferId" integer NOT NULL,
  "serialNumber" varchar(50) UNIQUE NOT NULL,
  "familyType" main."asicFamilyType" NOT NULL,
  "waferMapPosition" varchar(50) NOT NULL,
  "quality" main."asicQuality" NOT NULL
);

CREATE TABLE "main"."ProbeCard" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "serialNumber" varchar(50) UNIQUE NOT NULL,
  "vendor" main."pcVendor" NOT NULL,
  "name" main."pcName" NOT NULL,
  "model" main."pcModel" NOT NULL,
  "version" integer NOT NULL,
  "arrivalDate" date NOT NULL,
  "location" main."pcLocation" NOT NULL,
  "type" main."pcType" NOT NULL,
  "vendorCleaningInterval" integer NOT NULL
);

CREATE TABLE "main"."ProbeCardFamilyType" (
  "probeCardId" integer NOT NULL,
  "asicFamilyType" main."asicFamilyType" NOT NULL
);

CREATE TABLE "main"."WaferProbeMachine" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "serialNumber" varchar(50) UNIQUE NOT NULL,
  "name" varchar(50) UNIQUE NOT NULL,
  "hostName" varchar(200) NOT NULL,
  "connectionType" main."wpConnectionType" NOT NULL,
  "connectionPort" integer NOT NULL,
  "generalLocation" main."wpGeneralLocation" NOT NULL,
  "software" main."wpSwType" NOT NULL,
  "swVersion" varchar(50) NOT NULL,
  "vendor" main."wpVendor" NOT NULL
);

CREATE TABLE "main"."WaferProbeProject" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "wpMachineId" integer NOT NULL,
  "waferTypeId" integer NOT NULL,
  "asicFamilyType" main."asicFamilyType",
  "orientation" main."waferMapOrientation",
  "name" varchar(100) UNIQUE NOT NULL,
  "alignmentDie" varchar(100),
  "homeDie" varchar(100),
  "local2GlobalMap" JSON
);

CREATE TABLE "main"."ProbeCardMaintenance" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "probeCardId" integer NOT NULL,
  "cleaningDate" date,
  "totNumContacts" integer,
  "numContactsSinceLastCleaning" integer,
  "numContactsDuringCleaning" integer,
  "cleaningOverdrive" integer
);

CREATE TABLE "main"."AsicProbing" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "asicId" integer,
  "numContacts" integer,
  "mechanicalQuality" main."contactMechanicalQuality",
  "arrivalDate" date
);

CREATE TABLE "main"."WaferLoadedInMachine" (
  "machineId" integer,
  "waferId" integer,
  "date" date,
  "username" varchar(50),
  "status" main."waferInMachineStatus"
);

CREATE TABLE "main"."ProbeCardInstalledInMachine" (
  "machineId" integer,
  "probeCardId" integer,
  "date" date,
  "username" varchar(50)
);

CREATE TABLE "main"."AsicConfiguration" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "probeStationId" integer,
  "versionId" integer,
  "isTestingAllowed" boolean
);

CREATE TABLE "main"."WpConfiguration" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "wpMachineId" integer,
  "versionId" integer,
  "orientation" main."waferMapOrientation"
);

CREATE TABLE "main"."ProbeCardConfiguration" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "probeCardId" integer,
  "versionId" integer,
  "cleaningInterval" integer
);

CREATE TABLE "main"."Chip" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "serialNumber" varchar(50) UNIQUE,
  "asicId" integer,
  "generalLocation" main."wpGeneralLocation"
);

CREATE TABLE "main"."ChipLocation" (
  "chipId" integer NOT NULL,
  "generalLocation" main."wpGeneralLocation",
  "creationTime" timestamp DEFAULT (CURRENT_TIMESTAMP),
  "username" varchar(50),
  "note" text
);

CREATE TABLE "main"."SLDO" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "chipId" integer,
  "serialNumber" varchar(50)
);

CREATE TABLE "main"."TestSetup" (
  "id" integer PRIMARY KEY,
  "name" main."testSetupType",
  "generalLocation" main."wpGeneralLocation"
);

CREATE TABLE "main"."TestSetupEquipment" (
  "testSetupId" integer,
  "equipment" main."testEquipments",
  "eqipmentDetails" JSON
);

CREATE TABLE "main"."SLDOTestConfiguration" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100),
  "mode" main."sldoTestModes",
  "loadCapacitance" main."sldoTestLoadCap",
  "loadCurrent" main."sldoTestLoadCurrent",
  "temperature" main."sldoTestTemparature"
);

CREATE TABLE "main"."SLDOTest" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" main."sldoTestTypes",
  "timestamp" timestamp DEFAULT (CURRENT_TIMESTAMP),
  "SLDOid" integer,
  "testSetupId" integer,
  "configId" integer,
  "testValues" JSON
);

ALTER TABLE "main"."Wafer" ADD FOREIGN KEY ("waferTypeId") REFERENCES "main"."WaferType" ("id");

ALTER TABLE "main"."WaferLocation" ADD FOREIGN KEY ("waferId") REFERENCES "main"."Wafer" ("id");

ALTER TABLE "main"."Version" ADD FOREIGN KEY ("baseVersion") REFERENCES "main"."Version" ("id");

ALTER TABLE "main"."WaferTypeImage" ADD FOREIGN KEY ("waferTypeId") REFERENCES "main"."WaferType" ("id");

ALTER TABLE "main"."Asic" ADD FOREIGN KEY ("waferId") REFERENCES "main"."Wafer" ("id");

ALTER TABLE "main"."ProbeCardFamilyType" ADD FOREIGN KEY ("probeCardId") REFERENCES "main"."ProbeCard" ("id");

ALTER TABLE "main"."WaferProbeProject" ADD FOREIGN KEY ("wpMachineId") REFERENCES "main"."WaferProbeMachine" ("id");

ALTER TABLE "main"."WaferProbeProject" ADD FOREIGN KEY ("waferTypeId") REFERENCES "main"."WaferType" ("id");

ALTER TABLE "main"."ProbeCardMaintenance" ADD FOREIGN KEY ("probeCardId") REFERENCES "main"."ProbeCard" ("id");

ALTER TABLE "main"."AsicProbing" ADD FOREIGN KEY ("asicId") REFERENCES "main"."Asic" ("id");

ALTER TABLE "main"."WaferLoadedInMachine" ADD FOREIGN KEY ("machineId") REFERENCES "main"."WaferProbeMachine" ("id");

ALTER TABLE "main"."WaferLoadedInMachine" ADD FOREIGN KEY ("waferId") REFERENCES "main"."Wafer" ("id");

ALTER TABLE "main"."ProbeCardInstalledInMachine" ADD FOREIGN KEY ("machineId") REFERENCES "main"."WaferProbeMachine" ("id");

ALTER TABLE "main"."ProbeCardInstalledInMachine" ADD FOREIGN KEY ("probeCardId") REFERENCES "main"."ProbeCard" ("id");

ALTER TABLE "main"."AsicConfiguration" ADD FOREIGN KEY ("probeStationId") REFERENCES "main"."WaferProbeMachine" ("id");

ALTER TABLE "main"."AsicConfiguration" ADD FOREIGN KEY ("versionId") REFERENCES "main"."Version" ("id");

ALTER TABLE "main"."WpConfiguration" ADD FOREIGN KEY ("wpMachineId") REFERENCES "main"."WaferProbeMachine" ("id");

ALTER TABLE "main"."WpConfiguration" ADD FOREIGN KEY ("versionId") REFERENCES "main"."Version" ("id");

ALTER TABLE "main"."ProbeCardConfiguration" ADD FOREIGN KEY ("probeCardId") REFERENCES "main"."ProbeCard" ("id");

ALTER TABLE "main"."ProbeCardConfiguration" ADD FOREIGN KEY ("versionId") REFERENCES "main"."Version" ("id");

ALTER TABLE "main"."Chip" ADD FOREIGN KEY ("asicId") REFERENCES "main"."Asic" ("id");

ALTER TABLE "main"."ChipLocation" ADD FOREIGN KEY ("chipId") REFERENCES "main"."Chip" ("id");

ALTER TABLE "main"."SLDO" ADD FOREIGN KEY ("chipId") REFERENCES "main"."Chip" ("id");

ALTER TABLE "main"."TestSetupEquipment" ADD FOREIGN KEY ("testSetupId") REFERENCES "main"."TestSetup" ("id");

ALTER TABLE "main"."SLDOTest" ADD FOREIGN KEY ("SLDOid") REFERENCES "main"."SLDO" ("id");

ALTER TABLE "main"."SLDOTest" ADD FOREIGN KEY ("testSetupId") REFERENCES "main"."TestSetup" ("id");

ALTER TABLE "main"."SLDOTest" ADD FOREIGN KEY ("configId") REFERENCES "main"."SLDOTestConfiguration" ("id");
